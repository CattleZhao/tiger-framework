<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="tiger.common.dal.persistence.AttachMapper" >
  <resultMap id="BaseResultMap" type="tiger.common.dal.dataobject.AttachDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="attach_type" property="attachType" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="is_del" property="isDel" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="tiger.common.dal.dataobject.AttachDO" extends="BaseResultMap" >
    <result column="meta_data" property="metaData" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, url, `name`, `size`, attach_type, create_time, update_time, account_id, is_del
  </sql>
  <sql id="Blob_Column_List" >
    meta_data
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="tiger.common.dal.dataobject.example.AttachExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from attach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="tiger.common.dal.dataobject.example.AttachExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithBLOBsAndPage" resultMap="ResultMapWithBLOBs" parameterType="tiger.common.dal.dataobject.example.AttachExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from attach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="tiger.common.dal.dataobject.example.AttachExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tiger.common.dal.dataobject.example.AttachExample" >
    delete from attach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="tiger.common.dal.dataobject.example.AttachExample" resultType="java.lang.Integer" >
    select count(*) from attach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update attach
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        `size` = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.attachType != null" >
        attach_type = #{record.attachType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.metaData != null" >
        meta_data = #{record.metaData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update attach
    set id = #{record.id,jdbcType=BIGINT},
    url = #{record.url,jdbcType=VARCHAR},
    `name` = #{record.name,jdbcType=VARCHAR},
    `size` = #{record.size,jdbcType=INTEGER},
    attach_type = #{record.attachType,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    account_id = #{record.accountId,jdbcType=BIGINT},
    is_del = #{record.isDel,jdbcType=TINYINT},
    meta_data = #{record.metaData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update attach
    set id = #{record.id,jdbcType=BIGINT},
    url = #{record.url,jdbcType=VARCHAR},
    `name` = #{record.name,jdbcType=VARCHAR},
    `size` = #{record.size,jdbcType=INTEGER},
    attach_type = #{record.attachType,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    account_id = #{record.accountId,jdbcType=BIGINT},
    is_del = #{record.isDel,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from attach
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from attach
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="tiger.common.dal.dataobject.AttachDO" useGeneratedKeys="true" keyProperty="id" >
    insert into attach (url, `name`, `size`,
    attach_type, create_time, update_time,
    account_id, is_del, meta_data
    )
    values (#{url,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER},
    #{attachType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
    #{accountId,jdbcType=BIGINT}, #{isDel,jdbcType=TINYINT}, #{metaData,jdbcType=LONGVARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="tiger.common.dal.dataobject.AttachDO" useGeneratedKeys="true" keyProperty="id" >
    insert into attach
    <trim prefix="(" suffix=")" suffixOverrides="," >
      url,
      `name`,
      `size`,
      attach_type,
      create_time,
      update_time,
      account_id,
      is_del,
      meta_data,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{url,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{size,jdbcType=INTEGER},
      #{attachType,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{accountId,jdbcType=BIGINT},
      #{isDel,jdbcType=TINYINT},
      #{metaData,jdbcType=LONGVARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tiger.common.dal.dataobject.AttachDO" >
    update attach
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        `size` = #{size,jdbcType=INTEGER},
      </if>
      <if test="attachType != null" >
        attach_type = #{attachType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="metaData != null" >
        meta_data = #{metaData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tiger.common.dal.dataobject.AttachDO" >
    update attach
    set url = #{url,jdbcType=VARCHAR},
    `name` = #{name,jdbcType=VARCHAR},
    `size` = #{size,jdbcType=INTEGER},
    attach_type = #{attachType,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    account_id = #{accountId,jdbcType=BIGINT},
    is_del = #{isDel,jdbcType=TINYINT},
    meta_data = #{metaData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tiger.common.dal.dataobject.AttachDO" >
    update attach
    set url = #{url,jdbcType=VARCHAR},
    `name` = #{name,jdbcType=VARCHAR},
    `size` = #{size,jdbcType=INTEGER},
    attach_type = #{attachType,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    account_id = #{accountId,jdbcType=BIGINT},
    is_del = #{isDel,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="listAttachesByIds" resultMap="AttachResultMap">
    select *
    from attach
    where id in
    <foreach collection="items"  item="item" open="(" close=")" separator="," >
        #{item}
    </foreach>
  </select>

  <select id="countByUrl" resultType="java.lang.Integer">
    select count(1)
    from attach a
    where a.url = #{attachUrl,jdbcType=VARCHAR} and a.is_del = 0
  </select>
  <select id="countExistedIds" resultType="java.lang.Integer" parameterType="list">
    select count(a.id)
    from attach a
    where a.id in
    <foreach collection="ids" item="item" open="(" close=")" separator="," >
      #{item}
    </foreach>
    AND a.is_del = 0
    <if test="null != accountId">
      AND a.account_id = #{accountId}
    </if>
    <if test="null != attachType">
      AND a.attach_type = #{attachType}
    </if>
  </select>

</mapper>

